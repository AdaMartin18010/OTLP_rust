# OTLP Rust CI Dockerfile
FROM rust:1.90-slim as builder

# 安装系统依赖
RUN apt-get update && apt-get install -y \
    build-essential \
    pkg-config \
    libssl-dev \
    libclang-dev \
    clang \
    llvm \
    && rm -rf /var/lib/apt/lists/*

# 设置工作目录
WORKDIR /app

# 复制Cargo文件
COPY Cargo.toml Cargo.lock ./

# 创建虚拟main.rs来缓存依赖
RUN mkdir src && echo "fn main() {}" > src/main.rs

# 构建依赖
RUN cargo build --release
RUN rm -rf src

# 复制源代码
COPY . .

# 构建应用
RUN cargo build --release --all-features

# 运行测试
RUN cargo test --all-features

# 运行基准测试
RUN cargo bench --all-features

# 生产镜像
FROM debian:bookworm-slim

# 安装运行时依赖
RUN apt-get update && apt-get install -y \
    ca-certificates \
    libssl3 \
    && rm -rf /var/lib/apt/lists/*

# 创建非root用户
RUN useradd -r -s /bin/false otlp

# 设置工作目录
WORKDIR /app

# 复制二进制文件
COPY --from=builder /app/target/release/otlp /usr/local/bin/otlp

# 设置权限
RUN chmod +x /usr/local/bin/otlp

# 切换到非root用户
USER otlp

# 暴露端口
EXPOSE 8080 9090

# 健康检查
HEALTHCHECK --interval=30s --timeout=3s --start-period=5s --retries=3 \
    CMD curl -f http://localhost:8080/health || exit 1

# 启动命令
CMD ["otlp"]
