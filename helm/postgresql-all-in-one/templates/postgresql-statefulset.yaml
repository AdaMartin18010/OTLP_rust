{{- if .Values.postgresql.enabled }}
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "postgresql-all-in-one.fullname" . }}-postgresql
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "postgresql-all-in-one.labels" . | nindent 4 }}
    app.kubernetes.io/component: postgresql
spec:
  serviceName: {{ include "postgresql-all-in-one.fullname" . }}-postgresql
  replicas: 1
  selector:
    matchLabels:
      {{- include "postgresql-all-in-one.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: postgresql
  template:
    metadata:
      labels:
        {{- include "postgresql-all-in-one.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/component: postgresql
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "postgresql-all-in-one.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: postgresql
          image: "{{ .Values.postgresql.image.repository }}:{{ .Values.postgresql.image.tag }}"
          imagePullPolicy: {{ .Values.postgresql.image.pullPolicy }}
          ports:
            - name: postgresql
              containerPort: 5432
              protocol: TCP
          env:
            - name: POSTGRES_DB
              value: {{ .Values.postgresql.auth.database | quote }}
            - name: POSTGRES_USER
              value: {{ .Values.postgresql.auth.username | quote }}
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ include "postgresql-all-in-one.fullname" . }}-postgresql-secret
                  key: postgres-password
            - name: PGDATA
              value: /var/lib/postgresql/data/pgdata
          volumeMounts:
            - name: postgresql-data
              mountPath: /var/lib/postgresql/data
            - name: postgresql-config
              mountPath: /etc/postgresql/postgresql.conf
              subPath: postgresql.conf
          resources:
            {{- toYaml .Values.postgresql.primary.resources | nindent 12 }}
          {{- if .Values.postgresql.primary.livenessProbe.enabled }}
          livenessProbe:
            exec:
              command:
                - /bin/bash
                - -c
                - exec pg_isready -U {{ .Values.postgresql.auth.username }} -h 127.0.0.1 -p 5432
            initialDelaySeconds: {{ .Values.postgresql.primary.livenessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.postgresql.primary.livenessProbe.periodSeconds }}
            timeoutSeconds: {{ .Values.postgresql.primary.livenessProbe.timeoutSeconds }}
            failureThreshold: {{ .Values.postgresql.primary.livenessProbe.failureThreshold }}
          {{- end }}
          {{- if .Values.postgresql.primary.readinessProbe.enabled }}
          readinessProbe:
            exec:
              command:
                - /bin/bash
                - -c
                - exec pg_isready -U {{ .Values.postgresql.auth.username }} -h 127.0.0.1 -p 5432
            initialDelaySeconds: {{ .Values.postgresql.primary.readinessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.postgresql.primary.readinessProbe.periodSeconds }}
            timeoutSeconds: {{ .Values.postgresql.primary.readinessProbe.timeoutSeconds }}
            failureThreshold: {{ .Values.postgresql.primary.readinessProbe.failureThreshold }}
          {{- end }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
      volumes:
        - name: postgresql-config
          configMap:
            name: {{ include "postgresql-all-in-one.fullname" . }}-postgresql-config
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
  {{- if .Values.postgresql.primary.persistence.enabled }}
  volumeClaimTemplates:
    - metadata:
        name: postgresql-data
      spec:
        accessModes:
          {{- range .Values.postgresql.primary.persistence.accessModes }}
          - {{ . | quote }}
          {{- end }}
        resources:
          requests:
            storage: {{ .Values.postgresql.primary.persistence.size | quote }}
        {{- if .Values.postgresql.primary.persistence.storageClass }}
        storageClassName: {{ .Values.postgresql.primary.persistence.storageClass }}
        {{- end }}
  {{- end }}
{{- end }}
