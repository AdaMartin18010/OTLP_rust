apiVersion: apps/v1
kind: Deployment
metadata:
  name: otlp-collector
  namespace: otlp
  labels:
    app: otlp-collector
    version: v1.0.0
spec:
  replicas: 3
  selector:
    matchLabels:
      app: otlp-collector
  template:
    metadata:
      labels:
        app: otlp-collector
        version: v1.0.0
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8080"
        prometheus.io/path: "/metrics"
    spec:
      serviceAccountName: otlp-collector
      containers:
      - name: otlp-collector
        image: otlp:latest
        imagePullPolicy: Always
        ports:
        - name: http
          containerPort: 8080
          protocol: TCP
        - name: grpc
          containerPort: 4317
          protocol: TCP
        - name: grpc-http
          containerPort: 4318
          protocol: TCP
        env:
        - name: RUST_LOG
          value: "info"
        - name: OTLP_ENDPOINT
          value: "http://otlp-backend:4317"
        - name: OTLP_BATCH_SIZE
          value: "512"
        - name: OTLP_BATCH_TIMEOUT
          value: "5s"
        resources:
          requests:
            memory: "256Mi"
            cpu: "250m"
          limits:
            memory: "512Mi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /ready
            port: 8080
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
        volumeMounts:
        - name: config
          mountPath: /app/config
          readOnly: true
        - name: tmp
          mountPath: /tmp
      volumes:
      - name: config
        configMap:
          name: otlp-config
      - name: tmp
        emptyDir: {}
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - otlp-collector
              topologyKey: kubernetes.io/hostname
---
apiVersion: v1
kind: Service
metadata:
  name: otlp-collector
  namespace: otlp
  labels:
    app: otlp-collector
spec:
  type: ClusterIP
  ports:
  - name: http
    port: 8080
    targetPort: 8080
    protocol: TCP
  - name: grpc
    port: 4317
    targetPort: 4317
    protocol: TCP
  - name: grpc-http
    port: 4318
    targetPort: 4318
    protocol: TCP
  selector:
    app: otlp-collector
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: otlp-config
  namespace: otlp
data:
  config.yaml: |
    otlp:
      endpoint: "http://otlp-backend:4317"
      batch_size: 512
      batch_timeout: "5s"
      retry_count: 3
      retry_delay: "1s"
      compression: "gzip"
      timeout: "30s"
    logging:
      level: "info"
      format: "json"
    metrics:
      enabled: true
      port: 8080
      path: "/metrics"
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: otlp-collector
  namespace: otlp
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: otlp-collector
rules:
- apiGroups: [""]
  resources: ["pods", "services", "endpoints"]
  verbs: ["get", "list", "watch"]
- apiGroups: ["apps"]
  resources: ["deployments", "replicasets"]
  verbs: ["get", "list", "watch"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: otlp-collector
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: otlp-collector
subjects:
- kind: ServiceAccount
  name: otlp-collector
  namespace: otlp