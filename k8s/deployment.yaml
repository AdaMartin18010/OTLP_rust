apiVersion: apps/v1
kind: Deployment
metadata:
  name: otlp-rust
  namespace: otlp-system
  labels:
    app: otlp-rust
    version: v1.0.0
spec:
  replicas: 3
  selector:
    matchLabels:
      app: otlp-rust
  template:
    metadata:
      labels:
        app: otlp-rust
        version: v1.0.0
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8080"
        prometheus.io/path: "/metrics"
    spec:
      serviceAccountName: otlp-rust
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
      containers:
      - name: otlp-rust
        image: otlp-rust:latest
        imagePullPolicy: Always
        ports:
        - name: http
          containerPort: 8080
          protocol: TCP
        - name: grpc
          containerPort: 4317
          protocol: TCP
        - name: http-otlp
          containerPort: 4318
          protocol: TCP
        env:
        - name: RUST_LOG
          value: "info"
        - name: OTLP_ENDPOINT
          value: "http://localhost:4317"
        - name: OTLP_PROTOCOL
          value: "grpc"
        - name: MAX_CONCURRENCY
          value: "100"
        - name: BATCH_SIZE
          value: "1000"
        - name: BATCH_TIMEOUT
          value: "5s"
        resources:
          requests:
            memory: "128Mi"
            cpu: "100m"
          limits:
            memory: "512Mi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /ready
            port: 8080
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
        volumeMounts:
        - name: config
          mountPath: /app/config
          readOnly: true
        - name: tmp
          mountPath: /tmp
      volumes:
      - name: config
        configMap:
          name: otlp-rust-config
      - name: tmp
        emptyDir: {}
      nodeSelector:
        kubernetes.io/os: linux
      tolerations:
      - key: node-role.kubernetes.io/master
        operator: Exists
        effect: NoSchedule
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - otlp-rust
              topologyKey: kubernetes.io/hostname
---
apiVersion: v1
kind: Service
metadata:
  name: otlp-rust-service
  namespace: otlp-system
  labels:
    app: otlp-rust
spec:
  type: ClusterIP
  ports:
  - name: http
    port: 8080
    targetPort: 8080
    protocol: TCP
  - name: grpc
    port: 4317
    targetPort: 4317
    protocol: TCP
  - name: http-otlp
    port: 4318
    targetPort: 4318
    protocol: TCP
  selector:
    app: otlp-rust
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: otlp-rust-config
  namespace: otlp-system
data:
  config.yaml: |
    server:
      host: "0.0.0.0"
      port: 8080
      grpc_port: 4317
      http_otlp_port: 4318
    
    otlp:
      endpoint: "http://localhost:4317"
      protocol: "grpc"
      timeout: "30s"
      retry:
        max_attempts: 3
        initial_interval: "1s"
        max_interval: "10s"
        multiplier: 2.0
    
    processing:
      batch_size: 1000
      batch_timeout: "5s"
      max_concurrency: 100
      compression: "gzip"
    
    monitoring:
      metrics_enabled: true
      metrics_path: "/metrics"
      health_check_enabled: true
      health_check_path: "/health"
      readiness_check_enabled: true
      readiness_check_path: "/ready"
    
    logging:
      level: "info"
      format: "json"
      output: "stdout"
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: otlp-rust
  namespace: otlp-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: otlp-rust
rules:
- apiGroups: [""]
  resources: ["pods", "services", "endpoints"]
  verbs: ["get", "list", "watch"]
- apiGroups: ["apps"]
  resources: ["deployments", "replicasets"]
  verbs: ["get", "list", "watch"]
- apiGroups: ["networking.k8s.io"]
  resources: ["ingresses"]
  verbs: ["get", "list", "watch"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: otlp-rust
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: otlp-rust
subjects:
- kind: ServiceAccount
  name: otlp-rust
  namespace: otlp-system
---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: otlp-rust-hpa
  namespace: otlp-system
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: otlp-rust
  minReplicas: 3
  maxReplicas: 10
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80
  behavior:
    scaleDown:
      stabilizationWindowSeconds: 300
      policies:
      - type: Percent
        value: 10
        periodSeconds: 60
    scaleUp:
      stabilizationWindowSeconds: 60
      policies:
      - type: Percent
        value: 50
        periodSeconds: 60
